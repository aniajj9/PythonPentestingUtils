import queue
import requests
import sys
import threading
from termcolor import colored, cprint

AGENT = "Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:47.0) Gecko/20100101 Firefox/47.0"
EXTENTIONS = [".php", ".bak", ".orig", ".inc"]
TARGET = "http://testphp.vulvweb.com"
THREADS = 50
WORDLIST = "wordlist1.txt"


def get_words(resume = None):
    def extend_words(word):
        if '.' in word:
            words.put("/{}".format(word))
        else:
            words.put("/{}/".format(word))
        for extention in EXTENTIONS:
            words.put("/{}{}".format(word, extention))

    with open(WORDLIST) as f:
        raw_words = f.read()
    found_resume = False
    words = queue.Queue()

    for word in raw_words.split():
        if resume is not None:
            if found_resume:
                extend_words(word)
            elif word == resume:
                found_resume = True
                print("Resuming wordlist from: {}".format(resume))
        else:
            print(word)
            extend_words(word)
    return words


def directory_brute_forcer(words):
    headers = {"User-Agent":AGENT}
    while not words.empty():
        print("-----")
        url = "{}{}".format(TARGET, words.get())
        try:
            r = requests.get(url, headers = headers)
        except requests.exceptions.ConnectionError:
            sys.stderr.write('x')
            sys.stderr.flush()
            continue

        if r.status_code == 200:
            cprint("Success {}: {}".format(r.status_code, url), "green")
        elif r.status_code == 404:
            sys.stderr.write('.')
            sys.stderr.flush()
        else:
            print("{} => {}".format(r.status_code, url))


if __name__ == "__main__":
    words = get_words()
    print("press ENTER to start searching")
    for _ in range(THREADS):
        print("Thread ", _)
        t = threading.Thread(target=directory_brute_forcer, args=(words,))
        t.start()